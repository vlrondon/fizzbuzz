{% extends "layout.html.twig" %}

{% block title %}Index{% endblock %}
{% block content %}
    <main>
        <div
                class="relative pt-16 pb-32 flex content-center items-center justify-center"
                style="min-height: 75vh;"
        >
            <div
                    class="absolute top-0 w-full h-full bg-center bg-cover"
                    style='background-image: url("./assets/img/computer-2788918_1280.jpg");'
            >
          <span
                  id="blackOverlay"
                  class="w-full h-full absolute opacity-75 bg-black"
          ></span>
            </div>
            <div class="container relative mx-auto">
                <div class="items-center flex flex-wrap">
                    <div class="w-full lg:w-6/12 px-4 ml-auto mr-auto text-center">
                        <div class="pr-12">
                            <h1 class="page-heading text-white font-semibold text-5xl">
                                Fizz Buzz
                            </h1>
                            <p class="mt-4 text-lg text-gray-300">
                                This is a project that include Test Driven Development and Behavior Driven
                                Development in the final solution of Fizz Buzz Game.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div
                    class="top-auto bottom-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden"
                    style="height: 70px; transform: translateZ(0px);"
            >
                <svg
                        class="absolute bottom-0 overflow-hidden"
                        xmlns="http://www.w3.org/2000/svg"
                        preserveAspectRatio="none"
                        version="1.1"
                        viewBox="0 0 2560 100"
                        x="0"
                        y="0"
                >
                    <polygon
                            class="text-gray-300 fill-current"
                            points="2560 0 2560 100 0 100"
                    ></polygon>
                </svg>
            </div>
        </div>
        <section class="pb-20 bg-gray-300 -mt-24">
            <div class="container mx-auto px-4">
                <div class="flex flex-wrap">
                    <div class="lg:pt-12 pt-6 w-full md:w-4/12 px-4 text-center">
                        <div
                                class="relative flex flex-col min-w-0 break-words bg-white w-full mb-8 shadow-lg rounded-lg"
                        >
                            <div class="px-4 py-5 flex-auto">
                                <div
                                        class="text-white p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-red-400"
                                >
                                    <i class="fas fa-award"></i>
                                </div>
                                <h6 class="text-xl font-semibold">What is Fizz Buzz?</h6>
                                <p class="mt-2 mb-4 text-gray-600">
                                    Fizz buzz is a group word game for children to teach them about division. Players
                                    take
                                    turns to count incrementally, replacing any number divisible by three with the word
                                    "fizz", and any number divisible by five with the word "buzz".
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="w-full md:w-8/12 px-4 text-center">
                        <div
                                class="relative flex flex-col min-w-0 break-words bg-white w-full mb-8 shadow-lg rounded-lg"
                        >
                            <div class="px-4 py-5 flex-auto">
                                <div
                                        class="text-white p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-blue-400"
                                >
                                    <i class="fas fa-retweet"></i>
                                </div>
                                <h6 class="text-xl font-semibold">How to play</h6>
                                <p class="mt-2 mb-4 text-gray-600">
                                    Players generally sit in a circle. The player designated to go first says the number
                                    "1", and the players then count upwards in turn. However, any number divisible by
                                    three
                                    is replaced by the word fizz and any number divisible by five by the word buzz.
                                    Numbers
                                    divisible by 15 become fizz buzz. A player who hesitates or makes a mistake is
                                    eliminated from the game. For example, a typical round of fizz buzz would start as
                                    follows: 1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, Fizz Buzz,
                                    16,
                                    17, Fizz, 19, Buzz, Fizz, 22, 23, Fizz, Buzz, 26, Fizz, 28, 29, Fizz Buzz, 31, 32,
                                    Fizz,
                                    34, Buzz, Fizz, ...
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="pt-6 w-full md:w-12/12 px-4 text-center">
                        <div
                                class="relative flex flex-col min-w-0 break-words bg-white w-full mb-8 shadow-lg rounded-lg"
                        >
                            <div class="px-4 py-5 flex-auto">
                                <div
                                        class="text-white p-3 text-center inline-flex items-center justify-center w-12 h-12 mb-5 shadow-lg rounded-full bg-green-400"
                                >
                                    <i class="fas fa-fingerprint"></i>
                                </div>
                                <h6 class="text-xl font-semibold">Running the project</h6>
                                <p class="mt-2 mb-4 text-gray-600">
                                    Clone the repo and run the command line to install Composer.
                                </p>
                                <code> curl -s http://getcomposer.org/installer | php</code>
                                <p class="mt-2">Or [download composer.phar](http://getcomposer.org/composer.phar) in the
                                    project
                                    root. Next, run this to install dependencies.</p>
                                <code class="mt-2">php composer.phar install</code>
                                <p class="mt-2">
                                    Then to run PHPUnit, simply execute this in the root of the project.
                                </p>
                                <code class="mt-2">"./vendor/bin/phpunit.bat"</code>
                                <p class="mt-2">
                                    To see the project in a browser open a command line and run this on the project
                                    root.
                                </p>
                                <code class="mt-2">php -S localhost:8000</code>
                                <p class="mt-2">
                                    Then open a browser and visit:

                                    http://localhost:8000
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="relative py-20 pb-48">
            <div
                    class="bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20"
                    style="height: 80px; transform: translateZ(0px);"
            >
                <svg
                        class="absolute bottom-0 overflow-hidden"
                        xmlns="http://www.w3.org/2000/svg"
                        preserveAspectRatio="none"
                        version="1.1"
                        viewBox="0 0 2560 100"
                        x="0"
                        y="0"
                >
                    <polygon
                            class="text-white fill-current"
                            points="2560 0 2560 100 0 100"
                    ></polygon>
                </svg>
            </div>
            <div class="container mx-auto px-4">
                <div class="flex flex-wrap items-center mt-5 justify-center pt-8 pb-8 lg:mx-40">
                    <div class="w-full lg:w-5/12 px-4">

                        <h3 class="text-3xl mb-2 font-semibold leading-normal">
                            A simple solution
                        </h3>
                        <p
                                class="text-lg font-light leading-relaxed mt-4 mb-4 text-gray-700"
                        >
                            Fizz Buzz can be solved in different ways. This is
                            one of them.
                        </p>
                    </div>
                    <div class="w-full lg:w-5/12 px-4">
                       <pre><code class="language-php hljs php">
for ($i = 1; $i <= 100; $i++) {
	if ($i % 15 === 0) {
		echo "FizzBuzz" . PHP_EOL;
	} elseif ($i % 3 === 0){
		echo "Fizz" . PHP_EOL;
	} elseif ($i % 5 === 0){
        	echo "Buzz" . PHP_EOL;
	} else {
        	echo $i . PHP_EOL;
	}
}
                           </code></pre>
                    </div>
                </div>
            </div>
        </section>

        <section class="pb-20 relative block bg-gray-900">
            <div
                    class="bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20"
                    style="height: 80px; transform: translateZ(0px);"
            >
                <svg
                        class="absolute bottom-0 overflow-hidden"
                        xmlns="http://www.w3.org/2000/svg"
                        preserveAspectRatio="none"
                        version="1.1"
                        viewBox="0 0 2560 100"
                        x="0"
                        y="0"
                >
                    <polygon
                            class="text-gray-900 fill-current"
                            points="2560 0 2560 100 0 100"
                    ></polygon>
                </svg>
            </div>
            <div class="container mx-auto px-4 lg:pt-24 lg:pb-64">
                <div class="flex flex-wrap text-center justify-center">
                    <div class="w-full lg:w-6/12 px-4">
                        <h2 class="text-4xl font-semibold text-white">Let's play with Fizz Buzz</h2>
                        <p class="text-lg leading-relaxed mt-4 mb-4 text-gray-500">
                            It's time to try the game.
                        </p>
                    </div>
                </div>
            </div>
        </section>
        <section class="relative block py-24 lg:pt-0 bg-gray-900">
            <div class="container mx-auto px-4">
                <div class="flex flex-wrap justify-center lg:-mt-64 -mt-48">
                    <div class="w-full lg:w-6/12 px-4">
                        <div
                                class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300"
                        >
                            <form id="fizzbuzz-form" action="">
                                <div class="flex-auto p-5 lg:p-10">
                                    <h4 class="text-2xl font-semibold">Play</h4>
                                    <p class="leading-relaxed mt-1 mb-4 text-gray-600">
                                        Enter two values to play. The first value has to be lower that the second one.
                                    </p>
                                    <div class="relative w-full mb-3 mt-8">
                                        <label
                                                class="block uppercase text-gray-700 text-xs font-bold mb-2"
                                                for="from"
                                        >From</label
                                        ><input
                                                id="from"
                                                name="from"
                                                type="number"
                                                class="px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:shadow-outline w-full"
                                                placeholder="First number"
                                                style="transition: all 0.15s ease 0s;"
                                                value="{{ from }}"
                                        />
                                    </div>
                                    <div class="relative w-full mb-3">
                                        <label
                                                class="block uppercase text-gray-700 text-xs font-bold mb-2"
                                                for="to"
                                        >To</label
                                        ><input
                                                id="to"
                                                name="to"
                                                type="number"
                                                class="px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:shadow-outline w-full"
                                                placeholder="Second number"
                                                style="transition: all 0.15s ease 0s;"
                                                value="{{ to }}"
                                        />
                                    </div>
                                    <div class="text-center mt-6">
                                        <button
                                                id="lets-do-it"
                                                class="bg-gray-900 text-white active:bg-gray-700 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1"
                                                type="submit"
                                                style="transition: all 0.15s ease 0s;"
                                        >
                                            Let's do it!
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
{% endblock %}
{% block footer_content %}
<h4 class="text-3xl font-semibold">Result between {{ from }} and {{ to }}!</h4>
<!-- component -->
<div class="flex items-center">
    <div class="max-w-7xl w-full mx-auto py-6 sm:px-6 lg:px-8">
        <div class="flex flex-col lg:flex-row w-full lg:space-x-2 space-y-2 lg:space-y-0 mb-2 lg:mb-4">
            <div class="flex flex-wrap items-top mb-6">
                {% for item in items %}
                <div class="w-full lg:w-20 m-2">
                    <div class="widget w-full p-2 rounded-lg bg-white border border-gray-100 dark:bg-gray-900 dark:border-gray-800">
                        <div class="flex flex-row items-center justify-center">
                            <div class="flex flex-col">
                                {% if loop.first %}
                                <div class="first">
                                    {% elseif loop.last %}
                                    <div class="last">
                                        {% else %}
                                        <div>
                                            {% endif %}
                                            {{ item }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        {% endblock %}
        {% block js %}
            <script>
                $().ready(function () {
                    // validate the form when it is submitted
                    $('form').validate({
                        rules: {
                            from: {le: '#to'},
                        },
                        messages: {
                            from: {le: 'Must be less than or equal to field [To]'}
                        }
                    });
                });
            </script>
        {% endblock %}
